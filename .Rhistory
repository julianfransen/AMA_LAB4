# Chunk 6
estimated_variance <- exp(model2a$mtgr)
# Chunk 7
par(mfrow = c(1, 2))
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "lgWeight",
main = "locpolreg() and CV",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Add a legend with all elements
legend("topleft",
legend = c("ϵ²", "σ²(x)",
"m(x)", "95% CI"),
col = c("blue", "green", "red", "red"),
pch = c(16, NA, NA, NA),  # points are residuals
lty = c(NA, 1, 1, 2),     # Line type for other elements
lwd = c(NA, 2, 2, 2),     # Line width
cex = 0.8,
xpd = TRUE
)
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m - 1.96 * estimated_sd
upper_band <- estimated_m + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
# Chunk 8
optimal_h1b <- dpill(x = Yr, y = lgWeight)
model1b <- sm.regression(x = Yr, y = lgWeight, h = optimal_h1b, display="none")
# Get the estimated regression values
estimated_m <- model1b$estimate
estimated_m_interpolated <- approx(model1b$eval.points, model1b$estimate, xout = Yr)$y
# Chunk 9
residuals <- lgWeight - estimated_m_interpolated
stimated_residuals <- log(residuals^2)
# Chunk 10
optimal_h2b <- dpill(x = Yr, y = stimated_residuals)
model2b <- sm.regression(x = Yr, y = stimated_residuals, h = optimal_h2b, display="none")
estimated_q_interpolated <- approx(model2b$eval.points, model2b$estimate, xout = Yr)$y
# Chunk 11
estimated_variance <- exp(estimated_q_interpolated)
# Chunk 12
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "",
main = "sm.regression() and dpill()",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m_interpolated, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m_interpolated - 1.96 * estimated_sd
upper_band <- estimated_m_interpolated + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(sm)
library(KernSmooth)
data(aircraft)
# help(aircraft)
attach(aircraft)
lgPower <- log(Power)
lgSpan <- log(Span)
lgLength <- log(Length)
lgWeight <- log(Weight)
lgSpeed <- log(Speed)
lgRange <- log(Range)
# Chunk 3
source("locpolreg.R")
optimal_h1a <- h.select(x=Yr, y=lgWeight, method="cv")
model1a <- locpolreg(x = Yr, y = lgWeight, h = optimal_h1a, doing.plot=FALSE)
# Get the estimated regression values
estimated_m <- model1a$mtgr
# Chunk 4
residuals <- lgWeight - estimated_m
stimated_residuals <- log(residuals^2)
# Chunk 5
optimal_h2a <- h.select(x = Yr, y = stimated_residuals, method="cv")
model2a <- locpolreg(x = Yr, y = z_i, h = optimal_h2a, doing.plot=FALSE)
# Chunk 6
estimated_variance <- exp(model2a$mtgr)
# Chunk 7
mtext("Local linear regression with...", side = 3, line = 0, cex = 1.5)
par(mfrow = c(1, 2))
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "lgWeight",
main = "locpolreg() and CV",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Add a legend with all elements
legend("topleft",
legend = c("ϵ²", "σ²(x)",
"m(x)", "95% CI"),
col = c("blue", "green", "red", "red"),
pch = c(16, NA, NA, NA),  # points are residuals
lty = c(NA, 1, 1, 2),     # Line type for other elements
lwd = c(NA, 2, 2, 2),     # Line width
cex = 0.8,
xpd = TRUE
)
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m - 1.96 * estimated_sd
upper_band <- estimated_m + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
# Chunk 8
optimal_h1b <- dpill(x = Yr, y = lgWeight)
model1b <- sm.regression(x = Yr, y = lgWeight, h = optimal_h1b, display="none")
# Get the estimated regression values
estimated_m <- model1b$estimate
estimated_m_interpolated <- approx(model1b$eval.points, model1b$estimate, xout = Yr)$y
# Chunk 9
residuals <- lgWeight - estimated_m_interpolated
stimated_residuals <- log(residuals^2)
# Chunk 10
optimal_h2b <- dpill(x = Yr, y = stimated_residuals)
model2b <- sm.regression(x = Yr, y = stimated_residuals, h = optimal_h2b, display="none")
estimated_q_interpolated <- approx(model2b$eval.points, model2b$estimate, xout = Yr)$y
# Chunk 11
estimated_variance <- exp(estimated_q_interpolated)
# Chunk 12
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "",
main = "sm.regression() and dpill()",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m_interpolated, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m_interpolated - 1.96 * estimated_sd
upper_band <- estimated_m_interpolated + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(sm)
library(KernSmooth)
data(aircraft)
# help(aircraft)
attach(aircraft)
lgPower <- log(Power)
lgSpan <- log(Span)
lgLength <- log(Length)
lgWeight <- log(Weight)
lgSpeed <- log(Speed)
lgRange <- log(Range)
# Chunk 3
source("locpolreg.R")
optimal_h1a <- h.select(x=Yr, y=lgWeight, method="cv")
model1a <- locpolreg(x = Yr, y = lgWeight, h = optimal_h1a, doing.plot=FALSE)
# Get the estimated regression values
estimated_m <- model1a$mtgr
# Chunk 4
residuals <- lgWeight - estimated_m
stimated_residuals <- log(residuals^2)
# Chunk 5
optimal_h2a <- h.select(x = Yr, y = stimated_residuals, method="cv")
model2a <- locpolreg(x = Yr, y = z_i, h = optimal_h2a, doing.plot=FALSE)
# Chunk 6
estimated_variance <- exp(model2a$mtgr)
# Chunk 7
par(mfrow = c(1, 2))
mtext("Local linear regression with...", side = 3, line = 0, cex = 1.5)
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "lgWeight",
main = "locpolreg() and CV",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Add a legend with all elements
legend("topleft",
legend = c("ϵ²", "σ²(x)",
"m(x)", "95% CI"),
col = c("blue", "green", "red", "red"),
pch = c(16, NA, NA, NA),  # points are residuals
lty = c(NA, 1, 1, 2),     # Line type for other elements
lwd = c(NA, 2, 2, 2),     # Line width
cex = 0.8,
xpd = TRUE
)
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m - 1.96 * estimated_sd
upper_band <- estimated_m + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
# Chunk 8
optimal_h1b <- dpill(x = Yr, y = lgWeight)
model1b <- sm.regression(x = Yr, y = lgWeight, h = optimal_h1b, display="none")
# Get the estimated regression values
estimated_m <- model1b$estimate
estimated_m_interpolated <- approx(model1b$eval.points, model1b$estimate, xout = Yr)$y
# Chunk 9
residuals <- lgWeight - estimated_m_interpolated
stimated_residuals <- log(residuals^2)
# Chunk 10
optimal_h2b <- dpill(x = Yr, y = stimated_residuals)
model2b <- sm.regression(x = Yr, y = stimated_residuals, h = optimal_h2b, display="none")
estimated_q_interpolated <- approx(model2b$eval.points, model2b$estimate, xout = Yr)$y
# Chunk 11
estimated_variance <- exp(estimated_q_interpolated)
# Chunk 12
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "",
main = "sm.regression() and dpill()",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m_interpolated, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m_interpolated - 1.96 * estimated_sd
upper_band <- estimated_m_interpolated + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(sm)
library(KernSmooth)
data(aircraft)
# help(aircraft)
attach(aircraft)
lgPower <- log(Power)
lgSpan <- log(Span)
lgLength <- log(Length)
lgWeight <- log(Weight)
lgSpeed <- log(Speed)
lgRange <- log(Range)
# Chunk 3
source("locpolreg.R")
optimal_h1a <- h.select(x=Yr, y=lgWeight, method="cv")
model1a <- locpolreg(x = Yr, y = lgWeight, h = optimal_h1a, doing.plot=FALSE)
# Get the estimated regression values
estimated_m <- model1a$mtgr
# Chunk 4
residuals <- lgWeight - estimated_m
stimated_residuals <- log(residuals^2)
# Chunk 5
optimal_h2a <- h.select(x = Yr, y = stimated_residuals, method="cv")
model2a <- locpolreg(x = Yr, y = z_i, h = optimal_h2a, doing.plot=FALSE)
# Chunk 6
estimated_variance <- exp(model2a$mtgr)
# Chunk 7
par(mfrow = c(1, 2))
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "lgWeight",
main = "locpolreg() and CV",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Add a legend with all elements
legend("topleft",
legend = c("ϵ²", "σ²(x)",
"m(x)", "95% CI"),
col = c("blue", "green", "red", "red"),
pch = c(16, NA, NA, NA),  # points are residuals
lty = c(NA, 1, 1, 2),     # Line type for other elements
lwd = c(NA, 2, 2, 2),     # Line width
cex = 0.8,
xpd = TRUE
)
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m - 1.96 * estimated_sd
upper_band <- estimated_m + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
# Chunk 8
optimal_h1b <- dpill(x = Yr, y = lgWeight)
model1b <- sm.regression(x = Yr, y = lgWeight, h = optimal_h1b, display="none")
# Get the estimated regression values
estimated_m <- model1b$estimate
estimated_m_interpolated <- approx(model1b$eval.points, model1b$estimate, xout = Yr)$y
# Chunk 9
residuals <- lgWeight - estimated_m_interpolated
stimated_residuals <- log(residuals^2)
# Chunk 10
optimal_h2b <- dpill(x = Yr, y = stimated_residuals)
model2b <- sm.regression(x = Yr, y = stimated_residuals, h = optimal_h2b, display="none")
estimated_q_interpolated <- approx(model2b$eval.points, model2b$estimate, xout = Yr)$y
# Chunk 11
estimated_variance <- exp(estimated_q_interpolated)
# Chunk 12
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "",
main = "sm.regression() and dpill()",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m_interpolated, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m_interpolated - 1.96 * estimated_sd
upper_band <- estimated_m_interpolated + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
mtext("Local linear regression with...", side = 3, line = 0, cex = 1.5)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(sm)
library(KernSmooth)
data(aircraft)
# help(aircraft)
attach(aircraft)
lgPower <- log(Power)
lgSpan <- log(Span)
lgLength <- log(Length)
lgWeight <- log(Weight)
lgSpeed <- log(Speed)
lgRange <- log(Range)
# Chunk 3
source("locpolreg.R")
optimal_h1a <- h.select(x=Yr, y=lgWeight, method="cv")
model1a <- locpolreg(x = Yr, y = lgWeight, h = optimal_h1a, doing.plot=FALSE)
# Get the estimated regression values
estimated_m <- model1a$mtgr
# Chunk 4
residuals <- lgWeight - estimated_m
stimated_residuals <- log(residuals^2)
# Chunk 5
optimal_h2a <- h.select(x = Yr, y = stimated_residuals, method="cv")
model2a <- locpolreg(x = Yr, y = z_i, h = optimal_h2a, doing.plot=FALSE)
# Chunk 6
estimated_variance <- exp(model2a$mtgr)
# Chunk 7
par(mfrow = c(1, 2))
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "lgWeight",
main = "locpolreg() and CV",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Add a legend with all elements
legend("topleft",
legend = c("ϵ²", "σ²(x)",
"m(x)", "95% CI"),
col = c("blue", "green", "red", "red"),
pch = c(16, NA, NA, NA),  # points are residuals
lty = c(NA, 1, 1, 2),     # Line type for other elements
lwd = c(NA, 2, 2, 2),     # Line width
cex = 0.8,
xpd = TRUE
)
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m - 1.96 * estimated_sd
upper_band <- estimated_m + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
# Chunk 8
optimal_h1b <- dpill(x = Yr, y = lgWeight)
model1b <- sm.regression(x = Yr, y = lgWeight, h = optimal_h1b, display="none")
# Get the estimated regression values
estimated_m <- model1b$estimate
estimated_m_interpolated <- approx(model1b$eval.points, model1b$estimate, xout = Yr)$y
# Chunk 9
residuals <- lgWeight - estimated_m_interpolated
stimated_residuals <- log(residuals^2)
# Chunk 10
optimal_h2b <- dpill(x = Yr, y = stimated_residuals)
model2b <- sm.regression(x = Yr, y = stimated_residuals, h = optimal_h2b, display="none")
estimated_q_interpolated <- approx(model2b$eval.points, model2b$estimate, xout = Yr)$y
# Chunk 11
estimated_variance <- exp(estimated_q_interpolated)
# Chunk 12
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "",
main = "sm.regression() and dpill()",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m_interpolated, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m_interpolated - 1.96 * estimated_sd
upper_band <- estimated_m_interpolated + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
mtext("Local linear regression with...")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(sm)
library(KernSmooth)
data(aircraft)
# help(aircraft)
attach(aircraft)
lgPower <- log(Power)
lgSpan <- log(Span)
lgLength <- log(Length)
lgWeight <- log(Weight)
lgSpeed <- log(Speed)
lgRange <- log(Range)
# Chunk 3
source("locpolreg.R")
optimal_h1a <- h.select(x=Yr, y=lgWeight, method="cv")
model1a <- locpolreg(x = Yr, y = lgWeight, h = optimal_h1a, doing.plot=FALSE)
# Get the estimated regression values
estimated_m <- model1a$mtgr
# Chunk 4
residuals <- lgWeight - estimated_m
stimated_residuals <- log(residuals^2)
# Chunk 5
optimal_h2a <- h.select(x = Yr, y = stimated_residuals, method="cv")
model2a <- locpolreg(x = Yr, y = z_i, h = optimal_h2a, doing.plot=FALSE)
# Chunk 6
estimated_variance <- exp(model2a$mtgr)
# Chunk 7
par(mfrow = c(1, 2))
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "lgWeight",
main = "locpolreg() and CV",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Add a legend with all elements
legend("topleft",
legend = c("ϵ²", "σ²(x)",
"m(x)", "95% CI"),
col = c("blue", "green", "red", "red"),
pch = c(16, NA, NA, NA),  # points are residuals
lty = c(NA, 1, 1, 2),     # Line type for other elements
lwd = c(NA, 2, 2, 2),     # Line width
cex = 0.8,
xpd = TRUE
)
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m - 1.96 * estimated_sd
upper_band <- estimated_m + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
# Chunk 8
optimal_h1b <- dpill(x = Yr, y = lgWeight)
model1b <- sm.regression(x = Yr, y = lgWeight, h = optimal_h1b, display="none")
# Get the estimated regression values
estimated_m <- model1b$estimate
estimated_m_interpolated <- approx(model1b$eval.points, model1b$estimate, xout = Yr)$y
# Chunk 9
residuals <- lgWeight - estimated_m_interpolated
stimated_residuals <- log(residuals^2)
# Chunk 10
optimal_h2b <- dpill(x = Yr, y = stimated_residuals)
model2b <- sm.regression(x = Yr, y = stimated_residuals, h = optimal_h2b, display="none")
estimated_q_interpolated <- approx(model2b$eval.points, model2b$estimate, xout = Yr)$y
# Chunk 11
estimated_variance <- exp(estimated_q_interpolated)
# Chunk 12
# Calculate and plot ϵ²ᵢ against xᵢ
plot(Yr, residuals ^ 2,
xlab = "Yr",
ylab = "",
main = "sm.regression() and dpill()",
col = "blue",
pch = 16)  # Set the same y-axis range for both
# Superpose estimated σ²(x)
lines(Yr, estimated_variance, col = "green", lwd = 2)
# Superpose estimated mean with 95% CI
lines(Yr, estimated_m_interpolated, col = "red", lwd = 2)
estimated_sd = sqrt(estimated_variance)
lower_band <- estimated_m_interpolated - 1.96 * estimated_sd
upper_band <- estimated_m_interpolated + 1.96 * estimated_sd
lines(Yr, lower_band, col = "red", lty = 2, lwd = 2)
lines(Yr, upper_band, col = "red", lty = 2, lwd = 2)
